# This file contains the different endpoints your bot can use.

# Server where the models are pulled from.
# https://rasa.com/docs/rasa/model-storage#fetching-models-from-a-server

3models:
# url: ${RASA_MODEL_SERVER_URL}/@latest
# wait_time_between_pulls:  10   # [optional](default: 100)

# Server which runs your custom actions.
# https://rasa.com/docs/rasa/custom-actions

action_endpoint:
   url: ${RASA_ACTION_SERVER_URL}/webhook

#lock_store:
#    type: "redis"
#    url: redis
#    port: 6379

# Tracker store which is used to store the conversations.
# By default the conversations are stored in memory.
# https://rasa.com/docs/rasa/tracker-stores

#tracker_store:
#    type: redis
#    url: <host of the redis instance, e.g. localhost>
#    port: <port of your redis instance, usually 6379>
#    db: <number of your database within redis, e.g. 0>
#    password: <password used for authentication>
#    use_ssl: <whether or not the communication is encrypted, default false>

#tracker_store:
#    type: mongod
#    url: <url to your mongo instance, e.g. mongodb://localhost:27017>
#    db: <name of the db within your mongo instance, e.g. rasa>
#    username: <username used for authentication>
#    password: <password used for authentication>

tracker_store:
  type: SQL
  dialect: "postgresql"
  url: ${POSTGRES_HOST}
  port: ${POSTGRES_PORT}
  db: ${POSTGRES_DB}
  login_db: postgres
  username: ${POSTGRES_USER} 
  password: ${POSTGRES_PASSWORD}

# Event broker which all conversation events should be streamed to.
# https://rasa.com/docs/rasa/event-brokers

# event_broker:
#   type: botanalytics.rasa.Rasa
#   api_token: ${BOTANALYTICS_API_TOKEN}
#   debug: true

#nlg:
#  url: ${NLG_URL}/nlg
